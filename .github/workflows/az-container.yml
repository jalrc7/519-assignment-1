# This workflow will build a container and deploy it to an Azure Functions App on Linux when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure Functions app.
# For instructions see https://learn.microsoft.com/en-us/azure/azure-functions/functions-create-function-linux-custom-image?tabs=in-process%2Cbash%2Cazure-cli&pivots=programming-language-csharp
#
# To configure this workflow:
# 1. Set up the following secrets in your repository:
#   - AZURE_RBAC_CREDENTIALS
#   - REGISTRY_USERNAME
#   - REGISTRY_PASSWORD
# 2. Change env variables for your configuration.
#
# For more information on:
#   - GitHub Actions for Azure: https://github.com/Azure/Actions
#   - Azure Functions Container Action: https://github.com/Azure/functions-container-action
#   - Azure Service Principal for RBAC: https://github.com/Azure/functions-action#using-azure-service-principal-for-rbac-as-deployment-credential
#
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples/tree/master/FunctionApp

name: Deploy Container App

on:
  push:
    branches: ["main"]
    paths:
      - "Node/API2/**"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.CONTAINER_SECRET }}

    - name: Deploy to Azure Container App
      uses: azure/container-apps-deploy-action@v1
      with:
        imageToDeploy: assignment1jalrc7257deb.azurecr.io/assignmentapp:v1.0
        containerAppName: assignment-1-jalrc7
        resourceGroup: 519assign1_group
        environmentVariables: |
          myStorageConnectionAppSetting=secretref:secret3
       
